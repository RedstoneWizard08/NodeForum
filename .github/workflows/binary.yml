name: Backend - Binary

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            static_target: x86_64-unknown-linux-musl
            name: amd64
          
          - target: aarch64-unknown-linux-gnu
            static_target: aarch64-unknown-linux-musl
            name: arm64
          
          - target: i686-unknown-linux-gnu
            static_target: i686-unknown-linux-musl
            name: i686
          
          - target: arm-unknown-linux-gnueabi
            static_target: arm-unknown-linux-musleabi
            name: arm
          
          - target: arm-unknown-linux-gnueabihf
            static_target: arm-unknown-linux-musleabihf
            name: armhf

    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v3
      
      - name: ðŸ”§ Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      
      - name: ðŸš€ Build the binaries
        run: |
          # Install the system packages
          sudo apt-get update
          sudo apt-get -y install musl musl-tools musl-dev

          # Create directories
          mkdir out
          cd packages/backend

          # Build the binaries
          cargo build --release --target ${{ matrix.target }}
          RUSTFLAGS="-C target-feature=+crt-static" cargo build \
            --release --target ${{ matrix.static_target }}

          # Copy the binaries
          cp target/${{ matrix.target }}/release/nodeforum ../../out/nodeforum-${{ matrix.name }}
          cp target/${{ matrix.static_target }}/release/nodeforum ../../out/nodeforum-${{ matrix.name }}-static

      - name: ðŸ“¤ Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: out/*
